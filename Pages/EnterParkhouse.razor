@page "/EnterParkhouse"


@using ParkhausKorte.Data
@inject ParkingGarage ParkingGarage

<PageTitle>Einfahrt</PageTitle>

<h1>Einfahrt</h1>

<div class="maschine">
    <div class="screen">Frei: @parkSpace</div>
    <br>
    <div class="ticket-slot"></div>
    <div class="grid-container">
        <button class="grid-item btn-short-term-parker btn btn-primary @(freeArbitrarySpaces == 0 ? "btn-disabled" : "")" @onclick="addNormalParker">Kurzparker (@normalParkers)</button>
        <button class="grid-item btn-season-parker btn btn-primary @(freeSeasonSpaces == 0 ? "btn-disabled" : "")" @onclick="addSeasonParker">Dauerparker (@seasonParkers)</button>
    </div>
</div>

@code
{
    int parkingSpaces = 0;
    int freeArbitrarySpaces = 0;
    int freeSeasonSpaces = 0;
    int normalParkers = 0;
    int seasonParkers = 0;
    int parkSpace = 0;

    protected override void OnInitialized()
    {
        parkingSpaces = ParkingGarage.availableParkingSpaces;
        UpdateValues();
    }

    private void addNormalParker()
    {
        if (freeArbitrarySpaces > 0) {
            ParkingGarage.AddParkerOfType(ParkerType.normal);
            UpdateValues();
        }
    }
    private void addSeasonParker()
    {
        if (freeSeasonSpaces > 0) {
            ParkingGarage.AddParkerOfType(ParkerType.season);
            UpdateValues();
        }
    }
    private int GetFreeArbitrarySpaces() 
    {
        freeArbitrarySpaces = ParkingGarage.GetFreeSpaces();
        return freeArbitrarySpaces;
    }

    private int GetFreeSeasonSpaces() 
    {
        int reservedSeasonParkingSpaces = ParkingGarage.parkingGarageService.getReservedSeasonParkingSpaces();
        int seasonParkers = ParkingGarage.GetCurrentSeasonParkers();
        if (seasonParkers < reservedSeasonParkingSpaces) {
            freeSeasonSpaces = ParkingGarage.GetFreeSpaces() + (reservedSeasonParkingSpaces - seasonParkers);
        } else {
            freeSeasonSpaces = ParkingGarage.GetFreeSpaces();
        }
        
        return freeSeasonSpaces;
    }

    private int GetNormalParkers() 
    {
        normalParkers = ParkingGarage.GetCurrentNormalParkers();
        return normalParkers;
    }

    private int GetSeasonParkers() 
    {
        seasonParkers = ParkingGarage.GetCurrentSeasonParkers();
        return seasonParkers;
    }
    protected void UpdateValues()
    {
        GetFreeArbitrarySpaces();
        GetFreeSeasonSpaces();
        GetNormalParkers();
        GetSeasonParkers();
        parkSpace = freeArbitrarySpaces;
    }
}