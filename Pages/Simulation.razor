@page "/simulation"


@using ParkhausKorte.Data
@inject ParkingGarage ParkingGarage

<PageTitle>Simulation</PageTitle>

<h1>Simulation</h1>

<p role="status">Momentane freie Plätze: @freeSpaces</p>

<button class="btn btn-primary" @onclick="addNormalParker">Kurzparker einfahren lassen</button>
<button class="btn btn-primary" @onclick="subtractNormalParker">Kurzparker ausfahren lassen</button>
<button class="btn btn-primary" @onclick="addSeasonParker">Dauerparker einfahren lassen</button>
<button class="btn btn-primary" @onclick="subtractSeasonParker">Dauerparker ausfahren lassen</button>

@code {
    int freeSpaces = 0;

    private void addNormalParker()
    {
        ParkingGarage.AddParkerOfType(ParkerType.normal);
        GetFreeSpaces();
    }

    private void subtractNormalParker()
    {
        if (ParkingGarage.getCurrentNormalParkers() > 0)
        {
            ParkingGarage.RemoveParkerOfType(ParkerType.normal);
        }
        GetFreeSpaces();
    }
    private void addSeasonParker()
    {
        ParkingGarage.AddParkerOfType(ParkerType.season);
        GetFreeSpaces();
    }

    private void subtractSeasonParker()
    {
        if (ParkingGarage.getCurrentSeasonParkers() > 0)
        {
            ParkingGarage.RemoveParkerOfType(ParkerType.season);
        }
        GetFreeSpaces();
    }

    private int GetFreeSpaces() 
    {
        freeSpaces = ParkingGarage.GetFreeSpaces();
        return freeSpaces;
    }

    protected override void OnInitialized()
    {
        freeSpaces = GetFreeSpaces();
    }
}
